@model ProyectoMerck.Models.FertilitySubmitVM


<header class="blue-color">
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light mb-3">
        <div class="container-fluid">
            <a href="@Url.Action("Index", "Fertility")" class="btn"><i class="bi bi-chevron-left left-arrow"></i></a>
            <button class="navbar-toggler nav-button" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <i class="bi bi-list white"></i>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                </ul>
            </div>
        </div>
    </nav>
    <img class="merck-img" src="~/images/MerckFertilidad.JPG" />
</header>

<div class="blue-color">
    <div class="row justify-content-center mx-0">
        <div class="col-1"><i class="bi bi-chevron-left chevron-size"></i></div>
        <div class="col-7 offset-1 text-center align-self-center nav-button">Formulario</div>
        <div class="col-2">
            <i  class="bi bi-chevron-right chevron-size"></i>
        </div>

        <div class="curved-top-border">
        </div>
    </div>
</div>



@using (Html.BeginForm("Consult", "Fertility", FormMethod.Post))
{
    @Html.HiddenFor(c => c.Locations)
    @Html.HiddenFor(c => c.SelectedLocationIndex, new { id = "SelectedLocationIndex" })


    <div class="container">
        <div class="row border-bottom">
            <div class="col-2 offset-2 d-flex align-items-center justify-content-center">
                <i class="bi bi-pin pinkish-icon"></i>
            </div>
            <div class="col-6">
                <row>
                    <div class="col-6 align-self-end pinkish-color">
                        <h5>Pais</h5>
                    </div>
                </row>
                <row class="d-flex align-self-end">
                    @Html.DropDownListFor(p => p.SelectedCountry, Model.CountryList.Select(c =>
                new SelectListItem()
                {
                Value = c.Id.ToString(),
                Text = c.Name
                }),"--- Seleccione una opción ---",
                new { @class = "form-select form-select-lg mb-3", aria_label = ".form-select-lg example", id = "countryDropdown" })
                </row>
                <row>
                    <div class="col-6 align-self-bottom pinkish-color">
                        <h5>Provincia</h5>
                    </div>
                </row>
                <row class="d-flex align-self-end">
                    @if(Model.SubmitError == true)
                    {
                        @Html.DropDownListFor(p => p.SelectedProvince, Model.ProvinceList.Select(c =>
                        new SelectListItem()
                        {
                        Value = c.Id.ToString(),
                        Text = c.Name
                        }),"--- Seleccione una opción ---",
                        new { @class = "form-select form-select-lg mb-3", aria_label = ".form-select-lg example", id = "provinceDropdown" })
                    }
                    else
                    {
                        @Html.DropDownListFor(p => p.SelectedProvince, Enumerable.Empty<SelectListItem>(),"--- Seleccione una opción ---", new { @class = "form-select form-select-lg mb-3", aria_label = ".form-select-lg example", id = "provinceDropdown" })
                    }
                </row>
                <row>
                    <div class="col-6 align-self-bottom pinkish-color">
                        <h5>Localidad</h5>
                    </div>
                </row>
                <row class="d-flex align-self-end">
                    @if(Model.SubmitError == true)
                    {
                        @Html.DropDownListFor(p => p.SelectedProvinceLocation, Model.ProvinceLocationList.Select(c =>
                            new SelectListItem(){
                                Text = c.Name.ToString(),
                                Value = c.Id.ToString()
                            }
                        )
                        ,"--- Seleccione una opción ---",
                        new { @class = "form-select form-select-lg mb-3", aria_label = ".form-select-lg example", id = "provinceLocationDropdown" })

                    }
                    else
                    {
                        @Html.DropDownListFor(p => p.SelectedProvinceLocation, Enumerable.Empty<SelectListItem>(),"--- Seleccione una opción ---", new { @class = "form-select form-select-lg mb-3", aria_label = ".form-select-lg example", id = "provinceLocationDropdown" })

                    }
                </row>
            </div>
        </div>
        <div class="row border-bottom my-2 py-1">
            <div class="col-2 offset-2 d-flex align-items-center justify-content-center">
                <i class="bi bi-journal justify-content-center pinkish-icon-v2"></i>
            </div>
            <div class="col-6">
                <row>
                    <div class="col-11 align-self-bottom pinkish-color-v2">
                        <h5>Motivo Consulta</h5>
                    </div>
                </row>
                <row class="d-flex align-self-end">
                    @Html.DropDownListFor(p => p.ConsultMotiveMessage, Enumerable.Range(0,Model.ConsultMotiveList.Count).Select(num =>
                new SelectListItem(){
                Value = Model.ConsultMotiveList[num].ConsultMotiveX,
                Text = Model.ConsultMotiveList[num].ConsultMotiveX
                }),
                "--- Seleccione una opción ---",
                new {@class = "form-select form-select-lg mb-3", aria_label = ".form-select-lg example"})
                </row>
                @Html.ValidationMessageFor(p => p.ConsultMotiveMessage,"", new {@style="color:red; text-align:center"})
            </div>
        </div>
        <div class="row border-bottom my-2 py-2">
            <div class="col-2 offset-2 d-flex align-items-center justify-content-center">
                <i class="bi bi-envelope justify-content-center pinkish-icon-v2"></i>
            </div>
            <div class="col-6">
                <row>
                    <div class="col-10 align-self-bottom pinkish-color-v2">
                        <h5>Mail Contacto</h5>
                    </div>
                </row>
                <row class="d-flex align-self-end">
                    @Html.TextBoxFor(p => p.UserEmail,
                new {@class = "form-control"})               
                </row>
                @Html.ValidationMessageFor(m => m.UserEmail, "", new {@style="color:red"})
            </div>
        </div>

        <div class="container">
            <div id="clinicContainer" class="row mx-5 d-flex @(Model.SubmitError == true ? "clinic-container-error" : "clinic-container")">

                @if(Model.SubmitError == true)
                {
                    <h2 class="text-center text-light align-self-center">Por favor, ingrese sus datos de manera correcta</h2>
                }
                else
                {
                    <h2 class="text-center text-light align-self-center">Por favor, seleccione un País</h2>
                }

            </div>



            <div id="arrowContainer" class="container d-none">
                <div class="row justify-content-around">

                    <div id="arrowLeft" class="col">
                        <i class="bi bi-arrow-left-short pointer-arrow"></i>
                    </div>
                    <div id="arrowRight" class="col text-end">
                            <i class="bi bi-arrow-right-short pointer-arrow"></i>
                    </div>
                </div>
            </div>

            <div id="submitter" class="text-center d-flex justify-content-center d-none">
                <button id="clinicButton submit-button" class="btn form-control p-1 my-5 border-light" style="color:white; border-radius: 50px; background-color:darkcyan;">Enviar</button>
            </div>

        </div>




    </div>

    <div id="loadingSpinner" class="loading-spinner"></div>


}

<script src="~/js/clinics.js"></script>

<script>

    var provinceList = @Html.Raw(Json.Serialize(Model.ProvinceList));
    var locationList = @Html.Raw(Json.Serialize(Model.ProvinceLocationList));
    var clinicLocationList = @Html.Raw(Json.Serialize(Model.LocationsList));
    var errorHappened = '@Model.SubmitError'.toLowerCase() === 'true';

</script>

<script src="~/js/index.js"></script>
